// Generated by view binder compiler. Do not edit!
package com.willowtreeapps.constraintlayout20test.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.willowtreeapps.constraintlayout20test.Linear;
import com.willowtreeapps.constraintlayout20test.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCustomHelperBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Linear linearHelper;

  @NonNull
  public final View view1;

  @NonNull
  public final View view2;

  @NonNull
  public final View view3;

  private FragmentCustomHelperBinding(@NonNull ConstraintLayout rootView,
      @NonNull Linear linearHelper, @NonNull View view1, @NonNull View view2, @NonNull View view3) {
    this.rootView = rootView;
    this.linearHelper = linearHelper;
    this.view1 = view1;
    this.view2 = view2;
    this.view3 = view3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCustomHelperBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCustomHelperBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_custom_helper, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCustomHelperBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      Linear linearHelper = rootView.findViewById(R.id.linear_helper);
      if (linearHelper == null) {
        missingId = "linearHelper";
        break missingId;
      }

      View view1 = rootView.findViewById(R.id.view1);
      if (view1 == null) {
        missingId = "view1";
        break missingId;
      }

      View view2 = rootView.findViewById(R.id.view2);
      if (view2 == null) {
        missingId = "view2";
        break missingId;
      }

      View view3 = rootView.findViewById(R.id.view3);
      if (view3 == null) {
        missingId = "view3";
        break missingId;
      }

      return new FragmentCustomHelperBinding((ConstraintLayout) rootView, linearHelper, view1,
          view2, view3);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
