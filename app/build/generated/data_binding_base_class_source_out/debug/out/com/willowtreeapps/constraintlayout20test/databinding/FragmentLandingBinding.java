// Generated by view binder compiler. Do not edit!
package com.willowtreeapps.constraintlayout20test.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.button.MaterialButton;
import com.willowtreeapps.constraintlayout20test.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLandingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton customHelperButton;

  @NonNull
  public final MaterialButton horizontalFlowButton;

  @NonNull
  public final MaterialButton imageFilterButton;

  @NonNull
  public final MaterialButton layerButton;

  @NonNull
  public final MaterialButton motionLayoutButton;

  @NonNull
  public final MaterialButton verticalFlowButton;

  private FragmentLandingBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton customHelperButton, @NonNull MaterialButton horizontalFlowButton,
      @NonNull MaterialButton imageFilterButton, @NonNull MaterialButton layerButton,
      @NonNull MaterialButton motionLayoutButton, @NonNull MaterialButton verticalFlowButton) {
    this.rootView = rootView;
    this.customHelperButton = customHelperButton;
    this.horizontalFlowButton = horizontalFlowButton;
    this.imageFilterButton = imageFilterButton;
    this.layerButton = layerButton;
    this.motionLayoutButton = motionLayoutButton;
    this.verticalFlowButton = verticalFlowButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLandingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLandingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_landing, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLandingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      MaterialButton customHelperButton = rootView.findViewById(R.id.custom_helper_button);
      if (customHelperButton == null) {
        missingId = "customHelperButton";
        break missingId;
      }

      MaterialButton horizontalFlowButton = rootView.findViewById(R.id.horizontal_flow_button);
      if (horizontalFlowButton == null) {
        missingId = "horizontalFlowButton";
        break missingId;
      }

      MaterialButton imageFilterButton = rootView.findViewById(R.id.image_filter_button);
      if (imageFilterButton == null) {
        missingId = "imageFilterButton";
        break missingId;
      }

      MaterialButton layerButton = rootView.findViewById(R.id.layer_button);
      if (layerButton == null) {
        missingId = "layerButton";
        break missingId;
      }

      MaterialButton motionLayoutButton = rootView.findViewById(R.id.motion_layout_button);
      if (motionLayoutButton == null) {
        missingId = "motionLayoutButton";
        break missingId;
      }

      MaterialButton verticalFlowButton = rootView.findViewById(R.id.vertical_flow_button);
      if (verticalFlowButton == null) {
        missingId = "verticalFlowButton";
        break missingId;
      }

      return new FragmentLandingBinding((ConstraintLayout) rootView, customHelperButton,
          horizontalFlowButton, imageFilterButton, layerButton, motionLayoutButton,
          verticalFlowButton);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
