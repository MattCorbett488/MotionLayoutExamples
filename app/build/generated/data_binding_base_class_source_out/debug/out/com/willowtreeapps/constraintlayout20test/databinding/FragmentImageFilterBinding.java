// Generated by view binder compiler. Do not edit!
package com.willowtreeapps.constraintlayout20test.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatSeekBar;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.utils.widget.ImageFilterView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.button.MaterialButtonToggleGroup;
import com.willowtreeapps.constraintlayout20test.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentImageFilterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatTextView blackBrightnessText;

  @NonNull
  public final AppCompatSeekBar brightnessSeekbar;

  @NonNull
  public final AppCompatTextView brightnessText;

  @NonNull
  public final AppCompatTextView coldWarmthText;

  @NonNull
  public final AppCompatSeekBar contrastSeekbar;

  @NonNull
  public final AppCompatTextView contrastText;

  @NonNull
  public final AppCompatTextView grayContrastText;

  @NonNull
  public final AppCompatTextView grayscaleText;

  @NonNull
  public final AppCompatTextView highContrastText;

  @NonNull
  public final AppCompatTextView hotWarmthText;

  @NonNull
  public final AppCompatTextView hyperSaturationText;

  @NonNull
  public final ImageFilterView imageFilterView;

  @NonNull
  public final MaterialButton lessRoundButton;

  @NonNull
  public final MaterialButton roundButton;

  @NonNull
  public final AppCompatTextView roundText;

  @NonNull
  public final MaterialButtonToggleGroup roundToggleGroup;

  @NonNull
  public final AppCompatSeekBar saturationSeekbar;

  @NonNull
  public final AppCompatTextView saturationText;

  @NonNull
  public final AppCompatTextView twiceBrightText;

  @NonNull
  public final AppCompatSeekBar warmthSeekbar;

  @NonNull
  public final AppCompatTextView warmthText;

  private FragmentImageFilterBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatTextView blackBrightnessText, @NonNull AppCompatSeekBar brightnessSeekbar,
      @NonNull AppCompatTextView brightnessText, @NonNull AppCompatTextView coldWarmthText,
      @NonNull AppCompatSeekBar contrastSeekbar, @NonNull AppCompatTextView contrastText,
      @NonNull AppCompatTextView grayContrastText, @NonNull AppCompatTextView grayscaleText,
      @NonNull AppCompatTextView highContrastText, @NonNull AppCompatTextView hotWarmthText,
      @NonNull AppCompatTextView hyperSaturationText, @NonNull ImageFilterView imageFilterView,
      @NonNull MaterialButton lessRoundButton, @NonNull MaterialButton roundButton,
      @NonNull AppCompatTextView roundText, @NonNull MaterialButtonToggleGroup roundToggleGroup,
      @NonNull AppCompatSeekBar saturationSeekbar, @NonNull AppCompatTextView saturationText,
      @NonNull AppCompatTextView twiceBrightText, @NonNull AppCompatSeekBar warmthSeekbar,
      @NonNull AppCompatTextView warmthText) {
    this.rootView = rootView;
    this.blackBrightnessText = blackBrightnessText;
    this.brightnessSeekbar = brightnessSeekbar;
    this.brightnessText = brightnessText;
    this.coldWarmthText = coldWarmthText;
    this.contrastSeekbar = contrastSeekbar;
    this.contrastText = contrastText;
    this.grayContrastText = grayContrastText;
    this.grayscaleText = grayscaleText;
    this.highContrastText = highContrastText;
    this.hotWarmthText = hotWarmthText;
    this.hyperSaturationText = hyperSaturationText;
    this.imageFilterView = imageFilterView;
    this.lessRoundButton = lessRoundButton;
    this.roundButton = roundButton;
    this.roundText = roundText;
    this.roundToggleGroup = roundToggleGroup;
    this.saturationSeekbar = saturationSeekbar;
    this.saturationText = saturationText;
    this.twiceBrightText = twiceBrightText;
    this.warmthSeekbar = warmthSeekbar;
    this.warmthText = warmthText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentImageFilterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentImageFilterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_image_filter, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentImageFilterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      AppCompatTextView blackBrightnessText = rootView.findViewById(R.id.black_brightness_text);
      if (blackBrightnessText == null) {
        missingId = "blackBrightnessText";
        break missingId;
      }

      AppCompatSeekBar brightnessSeekbar = rootView.findViewById(R.id.brightness_seekbar);
      if (brightnessSeekbar == null) {
        missingId = "brightnessSeekbar";
        break missingId;
      }

      AppCompatTextView brightnessText = rootView.findViewById(R.id.brightness_text);
      if (brightnessText == null) {
        missingId = "brightnessText";
        break missingId;
      }

      AppCompatTextView coldWarmthText = rootView.findViewById(R.id.cold_warmth_text);
      if (coldWarmthText == null) {
        missingId = "coldWarmthText";
        break missingId;
      }

      AppCompatSeekBar contrastSeekbar = rootView.findViewById(R.id.contrast_seekbar);
      if (contrastSeekbar == null) {
        missingId = "contrastSeekbar";
        break missingId;
      }

      AppCompatTextView contrastText = rootView.findViewById(R.id.contrast_text);
      if (contrastText == null) {
        missingId = "contrastText";
        break missingId;
      }

      AppCompatTextView grayContrastText = rootView.findViewById(R.id.gray_contrast_text);
      if (grayContrastText == null) {
        missingId = "grayContrastText";
        break missingId;
      }

      AppCompatTextView grayscaleText = rootView.findViewById(R.id.grayscale_text);
      if (grayscaleText == null) {
        missingId = "grayscaleText";
        break missingId;
      }

      AppCompatTextView highContrastText = rootView.findViewById(R.id.high_contrast_text);
      if (highContrastText == null) {
        missingId = "highContrastText";
        break missingId;
      }

      AppCompatTextView hotWarmthText = rootView.findViewById(R.id.hot_warmth_text);
      if (hotWarmthText == null) {
        missingId = "hotWarmthText";
        break missingId;
      }

      AppCompatTextView hyperSaturationText = rootView.findViewById(R.id.hyper_saturation_text);
      if (hyperSaturationText == null) {
        missingId = "hyperSaturationText";
        break missingId;
      }

      ImageFilterView imageFilterView = rootView.findViewById(R.id.image_filter_view);
      if (imageFilterView == null) {
        missingId = "imageFilterView";
        break missingId;
      }

      MaterialButton lessRoundButton = rootView.findViewById(R.id.less_round_button);
      if (lessRoundButton == null) {
        missingId = "lessRoundButton";
        break missingId;
      }

      MaterialButton roundButton = rootView.findViewById(R.id.round_button);
      if (roundButton == null) {
        missingId = "roundButton";
        break missingId;
      }

      AppCompatTextView roundText = rootView.findViewById(R.id.round_text);
      if (roundText == null) {
        missingId = "roundText";
        break missingId;
      }

      MaterialButtonToggleGroup roundToggleGroup = rootView.findViewById(R.id.round_toggle_group);
      if (roundToggleGroup == null) {
        missingId = "roundToggleGroup";
        break missingId;
      }

      AppCompatSeekBar saturationSeekbar = rootView.findViewById(R.id.saturation_seekbar);
      if (saturationSeekbar == null) {
        missingId = "saturationSeekbar";
        break missingId;
      }

      AppCompatTextView saturationText = rootView.findViewById(R.id.saturation_text);
      if (saturationText == null) {
        missingId = "saturationText";
        break missingId;
      }

      AppCompatTextView twiceBrightText = rootView.findViewById(R.id.twice_bright_text);
      if (twiceBrightText == null) {
        missingId = "twiceBrightText";
        break missingId;
      }

      AppCompatSeekBar warmthSeekbar = rootView.findViewById(R.id.warmth_seekbar);
      if (warmthSeekbar == null) {
        missingId = "warmthSeekbar";
        break missingId;
      }

      AppCompatTextView warmthText = rootView.findViewById(R.id.warmth_text);
      if (warmthText == null) {
        missingId = "warmthText";
        break missingId;
      }

      return new FragmentImageFilterBinding((ConstraintLayout) rootView, blackBrightnessText,
          brightnessSeekbar, brightnessText, coldWarmthText, contrastSeekbar, contrastText,
          grayContrastText, grayscaleText, highContrastText, hotWarmthText, hyperSaturationText,
          imageFilterView, lessRoundButton, roundButton, roundText, roundToggleGroup,
          saturationSeekbar, saturationText, twiceBrightText, warmthSeekbar, warmthText);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
